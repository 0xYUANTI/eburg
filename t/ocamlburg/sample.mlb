
# 14 "sample.nw"
%term int string            -- terminal types must be declared
%type number {: int     :}  -- type declarations for nonterms are optional
%type str    {: string  :}

%%

number : Add(x:number,  y:number)                    [2]    {: x + y :}
number : Add(x:number,  Add(y:number, z:number))     [2]    {: x + y + z:}
number : Add(x:number,  Const(0))                    [1]    {: x     :}
number : Add(Const(0),  Const(0))                    [0]    {: 0     :}
number : Sub(n:number, m:number)                            {: n-m :}
number : Mul(n:number, m:number)                            {: n*m :}
number : Div(n:number, m:number)    {: if m = 0 then assert false else n/m :}
number : Const(x: int)                               [1]    {: x :}
number : Const(0)                                    [0]    {: 0 :}

-- Terminal variables are bound in cost expressions
str    : Str(x: string)          {: String.length x :}      {: x :}
str    : Cons(x: string, y:string)                   [2]    {: x ^ y :}

-- recursive chain rules
-- "number" is an abbreviation for "number:number"
str    : n:number                    [1]   {: string_of_int n      :}
number : str                         [1]   {: int_of_string str    :}
